AGGS                  #Include support for aggregates (like asteroids and rubble piles) See aggs.c
BATEPOLY              #Use the default cooling polynomial COOLING_POLY
CHABRIER              #Use the Chabrier 2003 IMF for starformation (See DOI:10.1086/376392)
CHANGESOFT            #Allow gravitational softening lengths to vary with time
CLOUDY                #Use CLOUDY version of line cooling
COLLISIONS            #Use solid-body collisions (not compatible with -DGASOLINE)
COLUMNLENGTH          #Use the smoothing length for the correlation length in Charlotte Christensen's H2 code
CONFIG_BFLOAT_4
CONFIG_BFLOAT_8
CONTROLYHII           #Make sure error in YHII and YHeIII is controlled
COOLING_BATE
COOLING_BOLEY
COOLING_COSMO
COOLING_DISK
COOLING_GRACKLE
COOLING_METAL
COOLING_MOLECULARH
COOLING_PLANET
COOLING_POLY
CULLENDEHNEN          #Use the time-variable CD viscosity limit switch
DENSITYU              Calculate modified energy-weighted density (used for cooling) (good for large density gradients)
DENSITYUNOTP          More aggressive version of the energy-weighted density that ignores contribution from center
DENSSOFT              #Use the SPH density for gravity softening
DIFFUSION             #Enable Diffusion (of metals and energy)
DIFFUSIONPRICE        #Daniel Price's Thermal Diffusion
DIVVOFF               #Remove the convergent flow requirement for starformation
DODVDS                #Different estimate of Balsara switch instead of divv
DRHODT                #Use the change in density over time (dRho/dt) 
DTADJUST              #Readjust timesteps if near short timestep particles -- required for good energy conservation
EPSACCH               #Use sph H not softening to calculate acceleration timestep, even if softening smaller
FEEDBACKDIFFLIMIT     #Disable thermal diffusion for particles that have their cooling shut off
FUVSHIELD
GASOLINE              #Do hydro 
GLASS                 #Use this to damp for glass initial conditions
GLASSZ                #Use this to damp for glass IC in z direction
GRACKLE_PRIMORDIAL_CHEMISTRY_MAX
GR_DRAG               #Enable Frame dragging
GROWMASS              #Allow collisional particles to grow
GSS_DUMPFRAME         #Dumpframe that allows coloring by particle property (Greg's version)
HSHRINK               #M4 kernel times (pi/6)^(1/3) for a tighter kernel
INFLOWOUTFLOW         #Enable inflow/outflow boundary conditions
INTERNAL_WARNINGS
INTERNAL_WARNINGS_ONCE
JEANSSF               #Use a simple Jeans length criteria for starformation
JEANSSOFT             #Calculate presure floor to keep jeans length larger than softening or sph h (default is just sph h)
JEANSSOFTONLY         #Calculate presurre floor to keep jeans length larger than softening only
KROUPA01              #Use the newer Kroupa 01 IMF (DOI:10.1046/j.1365-8711.2001.04022.x)
KROUPA                #Use the Kroupa IMF (from Kroupa et al 1993 Bibcode:1993MNRAS.262..545K)
M43D                  #Use a fancier 3D derived M4 Kernel
MARK
MODBATEPOLY           #Use a modified polytropic equation of state with COOLING_BATE
NATIVE_SQRT
N_DIM
NEED_VPRED            #Calculate a predicted veloctiy (this is defined all over, I'm unsure as to its signifigance)
NEWINTEG
NEWSHEAR              #Use the diffusion length for the correlation length in the H2 code from Charlotte Christensen
NEWTIME
NIORDERGASBUFFER
NOCOOLING             #What it says on the package, no radiative cooling 
NODIFFUSIONTHERMAL    #Disable thermal diffusion
NOFIT                 #Don't use any fitting for the cooling rates without H2 in cooling_metal_noH2.c
NORMAL                #Calculate and output surface normals for particles (Needs -DSURFACEAREA)
NSMOOTHINNER          #Ensure at least 18 neighbours inside 1.41 h
OUTURBDRIVER          #Drive turbulence as in Price & Federrath 2010 with OU variables
PARTICLESPLIT         #Particles will now divide if they get too heavy
PARTSHEAR             #Use particle shear for the correlation length in H2 cooling 
PEAKEDKERNEL          #Use a modified Peaked M4 kernel as per Thomas and Couchman 92 (Bibcode:1992MNRAS.257...11T)
PEXT                  #Allow non-zero external pressure 
PONRHOFLOOR           #Minimum P/rho value, prevents floating point errors in some cases
PREDRHO               #Generate predicted rho values (if bPredRho == 2)
PRES_HK               #Use the Euclidean mean of the both pOverRho values to calculate PdV work
PRES_MONAGHAN         #Use Monaghan's PdV work calculation (the average of both pOverRho values)
QUINTIC               #Use a quintic spline kernel from Dehnen & Aly 2012 (Bibcode:2012MNRAS.425.1068D)
RADIATIVEBOX          #Estimate Local Lyman-Werner radiation from the tree
ROT_FRAME             #Use a rotating reference frame with rotation rate given by dOmega
RTDENSITY             #Use an Ritchie & Thomas densities (DOI:10.1046/j.1365-8711.2001.04268.x)
RTF                   #-DRTDENSITY and -DRTFORCE 
RTFORCE               #Use an Ritchie & Thomas forces (DOI:10.1046/j.1365-8711.2001.04268.x)
RUBBLE_ZML            #Use "Rubble Pile" collision model (Requires -DCOLLISION)
SAND_PILE             #Use the "Sand Pile" collision model (Requires -DCOLLISION)
SCFSMOOTHED           #Use smoothed masses for star cluster formation (-DSTARCLUSTFORM)
SETTRAPFPE            #Enable Floating point exceptions
SFBOUND               #Use a surface-density criteria for allowing star formation.
SFCONDITIONS          #Use additional conditions for deciding if you form stars (Jeans length vs. h)
SFEVENTCRIT           #Log additional star formation criteria
SIMPLE_GAS_DRAG       #Apply a drag to the gas velocities using either the Epstein regime, or stopping time
SINGLE                #Use single precision floats where possible
SINKEXTRADATA         #Also store the position and velocity of newly formed sink particles.
SINKINGAVERAGE        #I believe this prevents sink particles from evolving with time? (Requires -DSINKING)
SINKING               #Include support for sink particles
SINKINGOUTVPRED       #Write out the vpred values to the outputted tipsy file for sink particles.
SLIDING_PATCH         #Alternative collision scheme (I don't really know what this does) (Requires -DCOLLISIONS)
SMOOTHBSW             #Use a smoothed Balsara switch
SPECIAL_PARTICLES     #Include support for weird special particles (not star, gas, or DM)
STARCLUSTERFORM       #Make new stars using the clustered star formation recipe
STARFORM              #Make new stars according to the starformation recipe
STARSINK              #Star particles are also sink partikes. (Requires -DSINKING)
SUPERBUBBLE			  #Use the Keller+ 2014 Superbubble feedback 
SUPERCOOL             #Enable "Supercool" type particles (just gas particles with mean velocities?)
SURFACEAREA           #Calculate and output the surface area of all the particles.
TOPHATFEEDBACK        #Use a tophat kernel to smooth feedback over
TUMBLER               #Generate a hard-walled cylinder boundary (for use with collisions and sand piles)
TWOSMOOTH             #Smooth twice rather than 3 times. This is defined by default in master.c
TZKEY64               #Use 64 (instead of 128) bit keys for the tree. Faster, but allows less depth.
UNONCOOL              #Enable noncooling energy for feedback
USE_PNG               #Use PNG encoding for dumpframes
USETABLE              #Grab the cooling rates from a table
VARALPHA              #Allow a varying alpha artificial viscosity 
VOLUMEFEEDBACK        #Smooth FB energy over a volume rather than mass
VOXEL                 #Dump voxels for volume imaging.
VSIGVISC              #Alternate Artificial Viscous force calculation (due to Monaghan)
WENDLANDC4            #Use the Wendland C_4 Kernel (See Dehnen & Aly 2012)
WENDLAND              #Use the Wendland C_2 Kernel (See Dehnen & Aly 2012)
WOLFIRE_NOTWOPHASE    #Use an imposed cooling rate without a two-phase instability
WOLFIRE               #Use the Wolfire values for the metal cooling rate with UV heating
